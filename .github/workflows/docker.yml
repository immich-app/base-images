name: Build and Push Docker Images

on:
  push:
    branches: [main]
    tags:
      - "*"
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 11 * * 4"
  workflow_dispatch:
    inputs:
      pushDateTag:
        description: "Push datestamp (production) tag"
        type: boolean
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write

jobs:
  set_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.build_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: "main"
          fetch-depth: 0

      - name: Set tag
        id: build_tag
        run: |
          echo "tag=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  build_and_push:
    needs: set_tag
    runs-on: self-hosted
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        target: ["dev", "prod"]
        include:
          - context: "server"
            image: "base-server"
            platforms: "linux/amd64,linux/arm64"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        # Skip when PR from a fork
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@v5
        with:
          flavor: |
            # Disable latest tag
            latest=false
          images: |
            name=ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}-${{ matrix.target }}
          tags: |
            # Tag scheduled runs with date
            type=schedule,value=${{ needs.set_tag.outputs.tag }}
            type=raw,value={{date 'YYYYMMDD'}},enable=${{ inputs.pushDateTag || false }}
            # Tag with branch name
            type=ref,event=branch
            # Tag with pr-number
            type=ref,event=pr
            # Tag with git tag on release
            type=ref,event=tag

      - name: Build and push image
        uses: docker/build-push-action@v5.1.0
        with:
          context: ${{ matrix.context }}
          target: ${{ matrix.target }}
          platforms: ${{ matrix.platforms }}
          # Skip pushing when PR from a fork
          push: ${{ !github.event.pull_request.head.repo.fork }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push_git_tags:
    needs: [set_tag, build_and_push]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: "main"
          fetch-depth: 0

      - name: Set git tag
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          git tag ${{needs.set_tag.outputs.tag}}
          git push origin ${{needs.set_tag.outputs.tag}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name != 'pull_request' }}
